name: Build CI wheels

on:
  push:
    branches:
      - main 
  pull_request:
    branches:
      - main

jobs:
  build_wheels:
    name: Build wheel for ${{ matrix.os }} on cp${{ matrix.python }}-${{ matrix.platform_id }}-${{ matrix.manylinux_image }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Window 64 bit
            - os: windows-latest
              python: 39
              platform_id: win_amd64
            #- os: windows-latest
              #python: 310
              #platform_id: win_amd64
           # - os: windows-latest
              #python: 311
              #platform_id: win_amd64
            #- os: windows-latest
              #python: 312
              #platform_id: win_amd64

          # Linux 64 bit manylinux2014
            - os: ubuntu-latest
              python: 39
              platform_id: manylinux_x86_64
              manylinux_image: manylinux2014
            # - os: ubuntu-latest
            #   python: 310
            #   platform_id: manylinux_x86_64
            #   manylinux_image: manylinux2014
            # - os: ubuntu-latest
            #   python: 311
            #   platform_id: manylinux_x86_64
            #   manylinux_image: manylinux2014
            # - os: ubuntu-latest
            #   python: 312
            #   platform_id: manylinux_x86_64
            #   manylinux_image: manylinux2014

          # MacOS macos-12 x86_64 is deprecated
            # - os: macos-12
            #   python: 39
            #   platform_id: macosx_x86_64
            #   deployment_target: "12"
            # - os: macos-12
            #   python: 310
            #   platform_id: macosx_x86_64
            #   deployment_target: "12"
            # - os: macos-12
            #   python: 311
            #   platform_id: macosx_x86_64
            #   deployment_target: "12"
            # - os: macos-12
            #   python: 312
            #   platform_id: macosx_x86_64
            #   deployment_target: "12"
    
            # MacOS arm64
            # - os: macos-14
            #   python: 39
            #   platform_id: macosx_arm64
            #   deployment_target: "14"
            # - os: macos-14
            #   python: 310
            #   platform_id: macosx_arm64
            #   deployment_target: "14"
            # - os: macos-14
            #   python: 311
            #   platform_id: macosx_arm64
            #   deployment_target: "14"
            # - os: macos-14
            #   python: 312
            #   platform_id: macosx_arm64
            #   deployment_target: "14"
       
    # continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # - name: Set up MSYS2 (Windows only)
      #   if: runner.os == 'Windows'
      #   uses: msys2/setup-msys2@v2
      #   with:
      #     update: true
      #     install: >-
      #       base-devel
      #       mingw-w64-x86_64-toolchain
      #       mingw-w64-x86_64-gcc
      #       mingw-w64-x86_64-gcc-fortran
      #       mingw-w64-x86_64-cmake
      #       mingw-w64-x86_64-lapack
      #       mingw-w64-x86_64-metis
      #       mingw-w64-x86_64-eigen3
      #       mingw-w64-x86_64-glpk
      #       git
      #       unzip
      
      # # If there is need to run scripts on Windows
      # - name: Run set up script in MSYS2 (Windows only)
      #   if: runner.os == 'Windows'
      #   shell: msys2 {0}
      #   run: |
      #     bash .github/workflows/scripts/windows-setup.sh
          
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.20.0
        env:
          # Skip 32-bit builds and musllinux
          CIBW_SKIP: "*-win32 *-manylinux_i686 *musllinux*"
          CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform_id }}
          MACOSX_DEPLOYMENT_TARGET: ${{ matrix.deployment_target }}
          CIBW_BEFORE_ALL_MACOS: |
            brew install eigen glpk
          CIBW_BEFORE_ALL_LINUX: |
            yum install -y epel-release eigen3-devel glpk-devel
          CIBW_BEFORE_ALL_WINDOWS: >-
            choco install eigen glpk -y
        with:
          package-dir: .
          output-dir: wheelhouse
          config-file: '{package}/pyproject.toml'

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-cp${{ matrix.python }}-${{ matrix.platform_id }}
          path: ./wheelhouse/*.whl

  publish-to-testpypi:
    name: >- 
      Publish Python 🐍 distribution 📦 to TestPyPI
    if: startsWith(github.ref, 'refs/tags/')  # only publish on tag pushes
    needs:
    - build_wheels
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/polytopewalk

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the wheels / dists
      uses: actions/download-artifact@v4
      with:
        pattern: cibw-*
        path: dist
        merge-multiple: true

    - name: Publish distribution 📦 to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/