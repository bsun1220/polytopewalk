<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">0</article-id>
<article-id pub-id-type="doi">N/A</article-id>
<title-group>
<article-title>PolytopeWalk: Sparse MCMC Sampling over
Polytopes</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Sun</surname>
<given-names>Benny</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Chen</surname>
<given-names>Yuansi</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Department of Statistics, Duke University</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Department of Mathematics, ETH Zurich</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2025-02-28">
<day>28</day>
<month>2</month>
<year>2025</year>
</pub-date>
<volume>¬øVOL?</volume>
<issue>¬øISSUE?</issue>
<fpage>¬øPAGE?</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>1970</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>MCMC methods</kwd>
<kwd>sparsity</kwd>
<kwd>interior-point methods</kwd>
<kwd>polytopes</kwd>
<kwd>facial reduction</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>High dimensional sampling is an important computational tool in
  statistics and other disciplines, with applications ranging from
  Bayesian statistical uncertainty quantification, metabolic modeling in
  systems biology, to volume computation. We present
  <monospace>PolytopeWalk</monospace>, a new scalable Python library
  designed for uniform sampling over polytopes. The library provides an
  end-to-end solution, that includes preprocessing algorithms such as
  facial reduction and initialization methods. Six state-of-the-art MCMC
  algorithms on polytopes are implemented, including the Dikin, Vaidya,
  and John Walk. Additionally, we introduce novel sparse constrained
  formulations of these algorithms, enabling efficient sampling from
  sparse polytopes of the form <inline-formula><alternatives>
  <tex-math><![CDATA[\mathcal{K}_2 = \{x \in \mathbb{R}^d \ | \  Ax = b, x \succeq_k 0\}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msub><mml:mi>ùí¶</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mo stretchy="false" form="prefix">{</mml:mo><mml:mi>x</mml:mi><mml:mo>‚àà</mml:mo><mml:msup><mml:mi>‚Ñù</mml:mi><mml:mi>d</mml:mi></mml:msup><mml:mspace width="0.222em"></mml:mspace><mml:mo stretchy="false" form="prefix">|</mml:mo><mml:mspace width="0.222em"></mml:mspace><mml:mi>A</mml:mi><mml:mi>x</mml:mi><mml:mo>=</mml:mo><mml:mi>b</mml:mi><mml:mo>,</mml:mo><mml:mi>x</mml:mi><mml:msub><mml:mo>‚âΩ</mml:mo><mml:mi>k</mml:mi></mml:msub><mml:mn>0</mml:mn><mml:mo stretchy="false" form="postfix">}</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>.
  This implementation maintains sparsity in
  <inline-formula><alternatives>
  <tex-math><![CDATA[A]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>A</mml:mi></mml:math></alternatives></inline-formula>,
  ensuring scalability to high dimensional settings
  <inline-formula><alternatives>
  <tex-math><![CDATA[(d > 10^4)]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>d</mml:mi><mml:mo>&gt;</mml:mo><mml:msup><mml:mn>10</mml:mn><mml:mn>4</mml:mn></mml:msup><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>.
  We also include novel implementation of several pre-processing steps,
  including the Facial Reduction algorithm.
  <monospace>PolytopeWalk</monospace> is available at
  <ext-link ext-link-type="uri" xlink:href="github.com/ethz-randomwalk/polytopewalk">github.com/ethz-randomwalk/polytopewalk</ext-link>
  with documentation at
  <ext-link ext-link-type="uri" xlink:href="polytopewalk.readthedocs.io/">polytopewalk.readthedocs.io/</ext-link>.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of Need</title>
  <p>High dimensional sampling is a fundamental problem in many
  computational disciplines such as statistics, probability, and
  operation research. For example, sampling is applied in portfolio
  optimization (Cal√®s et al.
  (<xref alt="2018" rid="ref-DBLPU003AjournalsU002FcorrU002Fabs-1803-05861" ref-type="bibr">2018</xref>)),
  metabolic networks in systems biology (Heirendt et al.
  (<xref alt="2018" rid="ref-COBRA" ref-type="bibr">2018</xref>)) and
  volume approximation over convex shapes (Simonovits
  (<xref alt="2003" rid="ref-Simonovits2003" ref-type="bibr">2003</xref>)).
  Markov chain Monte Carlo (MCMC) sampling algorithms offer a natural
  and scalable solution to this problem. These algorithms construct a
  Markov chain whose stationary distribution matches the target
  distribution. By running the chain for a large number of steps to
  ensure mixing, MCMC algorithms can efficiently generate approximately
  independent samples close to the target distribution, while not
  suffering from the curse of dimension issues.</p>
  <p>This package focuses on sampling from a uniform distribution over a
  user-specified polytope. We define the polytope as the following. Let
  <inline-formula><alternatives>
  <tex-math><![CDATA[A \in \mathbb{R}^{n \times d}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>A</mml:mi><mml:mo>‚àà</mml:mo><mml:msup><mml:mi>‚Ñù</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>√ó</mml:mo><mml:mi>d</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>,
  <inline-formula><alternatives>
  <tex-math><![CDATA[b \in \mathbb{R}^n]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>b</mml:mi><mml:mo>‚àà</mml:mo><mml:msup><mml:mi>‚Ñù</mml:mi><mml:mi>n</mml:mi></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>
  and define <inline-formula><alternatives>
  <tex-math><![CDATA[x \succeq_k y]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>x</mml:mi><mml:msub><mml:mo>‚âΩ</mml:mo><mml:mi>k</mml:mi></mml:msub><mml:mi>y</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>
  to mean that the last <inline-formula><alternatives>
  <tex-math><![CDATA[k]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>k</mml:mi></mml:math></alternatives></inline-formula>-coordinates
  of <inline-formula><alternatives>
  <tex-math><![CDATA[x]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>x</mml:mi></mml:math></alternatives></inline-formula>
  are greater than or equal to the corresponding coordinates of
  <inline-formula><alternatives>
  <tex-math><![CDATA[y]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>y</mml:mi></mml:math></alternatives></inline-formula>,
  i.e., <inline-formula><alternatives>
  <tex-math><![CDATA[\{x_{d-k+1} - y_{d-k+1} \ge 0, ... , x_{d} - y_{d} \ge 0\}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mo stretchy="false" form="prefix">{</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>d</mml:mi><mml:mo>‚àí</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>‚àí</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>d</mml:mi><mml:mo>‚àí</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>‚â•</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mi>.</mml:mi><mml:mi>.</mml:mi><mml:mi>.</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>d</mml:mi></mml:msub><mml:mo>‚àí</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>d</mml:mi></mml:msub><mml:mo>‚â•</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false" form="postfix">}</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>.
  Depending on whether we allow equality constraints, the sampling
  problem can be formalized in two forms:</p>
  <list list-type="order">
    <list-item>
      <p>The full-dimensional form:
      <named-content id="eqU003Afull_dim" content-type="equation"><disp-formula><alternatives>
      <tex-math><![CDATA[\begin{aligned}
              \mathcal{K}_1 = \{x \in \mathbb{R}^d \ | Ax \le b\},
              
          
      \end{aligned}]]></tex-math>
      <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mtable><mml:mtr><mml:mtd columnalign="right" style="text-align: right"><mml:msub><mml:mi>ùí¶</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mo stretchy="false" form="prefix">{</mml:mo><mml:mi>x</mml:mi><mml:mo>‚àà</mml:mo><mml:msup><mml:mi>‚Ñù</mml:mi><mml:mi>d</mml:mi></mml:msup><mml:mspace width="0.222em"></mml:mspace><mml:mo stretchy="false" form="prefix">|</mml:mo><mml:mi>A</mml:mi><mml:mi>x</mml:mi><mml:mo>‚â§</mml:mo><mml:mi>b</mml:mi><mml:mo stretchy="false" form="postfix">}</mml:mo><mml:mo>,</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives></disp-formula></named-content>
      where <inline-formula><alternatives>
      <tex-math><![CDATA[\mathcal{K}_1]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>ùí¶</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math></alternatives></inline-formula>
      is specified via <inline-formula><alternatives>
      <tex-math><![CDATA[n]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>n</mml:mi></mml:math></alternatives></inline-formula>
      inequality constraints.</p>
    </list-item>
    <list-item>
      <p>The constrained form:
      <named-content id="eqU003Aconstrained" content-type="equation"><disp-formula><alternatives>
      <tex-math><![CDATA[\begin{aligned}
              \mathcal{K}_2 = \{x \in \mathbb{R}^d \ | \ Ax = b, x \succeq_k 0\},
              
          
      \end{aligned}]]></tex-math>
      <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mtable><mml:mtr><mml:mtd columnalign="right" style="text-align: right"><mml:msub><mml:mi>ùí¶</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mo stretchy="false" form="prefix">{</mml:mo><mml:mi>x</mml:mi><mml:mo>‚àà</mml:mo><mml:msup><mml:mi>‚Ñù</mml:mi><mml:mi>d</mml:mi></mml:msup><mml:mspace width="0.222em"></mml:mspace><mml:mo stretchy="false" form="prefix">|</mml:mo><mml:mspace width="0.222em"></mml:mspace><mml:mi>A</mml:mi><mml:mi>x</mml:mi><mml:mo>=</mml:mo><mml:mi>b</mml:mi><mml:mo>,</mml:mo><mml:mi>x</mml:mi><mml:msub><mml:mo>‚âΩ</mml:mo><mml:mi>k</mml:mi></mml:msub><mml:mn>0</mml:mn><mml:mo stretchy="false" form="postfix">}</mml:mo><mml:mo>,</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives></disp-formula></named-content>
      where <inline-formula><alternatives>
      <tex-math><![CDATA[\mathcal{K}_2]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>ùí¶</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math></alternatives></inline-formula>
      is specified via <inline-formula><alternatives>
      <tex-math><![CDATA[n]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>n</mml:mi></mml:math></alternatives></inline-formula>
      equality constraints and <inline-formula><alternatives>
      <tex-math><![CDATA[k]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>k</mml:mi></mml:math></alternatives></inline-formula>
      coordinate inequality constraints.</p>
    </list-item>
  </list>
  <p>Large polytopes with sparse constraints are common in many
  applications. For instance, the largest human metabolic network
  RECON3D is modeled as a <inline-formula><alternatives>
  <tex-math><![CDATA[13543]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mn>13543</mml:mn></mml:math></alternatives></inline-formula>-dimensional
  sparse polytope (King et al.
  (<xref alt="2015" rid="ref-10.1093U002FnarU002Fgkv1049" ref-type="bibr">2015</xref>)).
  Additionally, linear programming datasets from
  <monospace>NetLib</monospace> are naturally in the constrained form,
  where <inline-formula><alternatives>
  <tex-math><![CDATA[A]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>A</mml:mi></mml:math></alternatives></inline-formula>
  matrix is sparse. These applications motivate the need for MCMC
  algorithms that leverage the large and sparse
  <inline-formula><alternatives>
  <tex-math><![CDATA[\mathcal{K}_2]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>ùí¶</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math></alternatives></inline-formula>
  formulation. We develop novel interior-point-method-based MCMC
  algorithms optimized for large and sparse constrained polytopes. By
  exploiting sparsity, our algorithms scale well in both per-iteration
  cost and sampling efficiency as a function of increasing dimension,
  enabling effective sampling from polytopes with dimensions exceeding
  <inline-formula><alternatives>
  <tex-math><![CDATA[10^4]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msup><mml:mn>10</mml:mn><mml:mn>4</mml:mn></mml:msup></mml:math></alternatives></inline-formula>.</p>
  <p>Interior-point-method-based MCMC sampling algorithms on a polytope
  are modifications of the Ball Walk (Vempala
  (<xref alt="2005" rid="ref-vempala2005" ref-type="bibr">2005</xref>)),
  incorporating key concepts from interior-point methods in
  optimization. These algorithms operate in two primary steps. First,
  the algorithm generates a proposal distribution whose covariance
  matrix is state-dependent and equal to the inverse of the Hessian
  matrix of a specified barrier function, capturing the local geometry
  of the polytope. Second, the algorithm employs the Metropolis-Hastings
  accept-reject step to ensure that its stationary distribution is
  uniform on the polytope. Using a state-dependent proposal distribution
  that adapts to the polytope‚Äôs local geometry, these MCMC algorithms
  achieve an improved mixing rate. Specific algorithms in this class
  include the Dikin Walk (Sachdeva &amp; Vishnoi
  (<xref alt="2015" rid="ref-DBLPU003AjournalsU002FcorrU002FSachdevaV15" ref-type="bibr">2015</xref>)),
  Vaidya Walk (Chen et al.
  (<xref alt="2018" rid="ref-JMLRU003Av19U003A18-158" ref-type="bibr">2018</xref>)),
  John Walk (Chen et al.
  (<xref alt="2018" rid="ref-JMLRU003Av19U003A18-158" ref-type="bibr">2018</xref>)),
  and Lee Sidford Walk (Laddha et al.
  (<xref alt="2019" rid="ref-DBLPU003AjournalsU002FcorrU002Fabs-1911-05656" ref-type="bibr">2019</xref>)),
  with theoretical guarantees therein. Each of these methods leverages
  different barrier functions and are specialized for sampling
  distributioned truncated on a polytope.</p>
  <p>In <monospace>PolytopeWalk</monospace>, we implement 4
  interior-point-method-based MCMC sampling algorithms in both the
  sparse, constrained formulation and the full-dimensional form.
  <monospace>PolytopeWalk</monospace> makes meaningful strides in the
  open-source development of MCMC, speeding up calculations for sparse
  high-dimensional sampling. On our Github, we demonstrate the
  scalability of <monospace>PolytopeWalk</monospace> against packages
  like <monospace>Volesti</monospace>. Finally, we provide an an
  open-source implementation of the Facial Reduction algorithm, used to
  handle degeneracy in polytopes.</p>
</sec>
<sec id="package-overview">
  <title>Package Overview</title>
  <p><monospace>PolytopeWalk</monospace> is an open-source library
  written in C++ with Python wrapper code. There are 3 main components
  of the package: preprocessing, sampling, and post processing.
  <monospace>PolytopeWalk</monospace> provides accelerated MCMC sampling
  algorithms in both the <inline-formula><alternatives>
  <tex-math><![CDATA[\mathcal{K}_1]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>ùí¶</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math></alternatives></inline-formula>
  formulation~<xref alt="1" rid="eqU003Afull_dim">1</xref> and
  <inline-formula><alternatives>
  <tex-math><![CDATA[\mathcal{K}_2]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>ùí¶</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math></alternatives></inline-formula>
  formulation~<xref alt="2" rid="eqU003Aconstrained">2</xref>. The
  source code is written in low-level C++ with
  <monospace>Eigen</monospace> for optimized linear algebra operations,
  <monospace>glpk</monospace> for a fast sparse linear programming
  solver, and <monospace>pybind</monospace> to enable Python
  binding.</p>
  <fig>
    <caption><p>Code Structure of Package</p></caption>
    <graphic mimetype="application" mime-subtype="pdf" xlink:href="Code_Design.pdf" />
  </fig>
  <sec id="random-walk-algorithms">
    <title>Random Walk Algorithms</title>
    <p>There are 2 main submodules: <monospace>dense</monospace> and
    <monospace>sparse</monospace>. The <monospace>dense</monospace>
    module includes implementations of the 6 random walks algorithms in
    the full-dimensional formulation. The <monospace>sparse</monospace>
    module includes implementations in the sparse, constrained
    formulation. Table I provides a broad overview of their respective
    mixing rates and cited paper.</p>
    <table-wrap>
      <table>
        <colgroup>
          <col width="29%" />
          <col width="37%" />
          <col width="34%" />
        </colgroup>
        <thead>
          <tr>
            <th align="center">Name</th>
            <th align="center">Mixing Time</th>
            <th align="center">Author</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td align="center"><monospace>Ball Walk</monospace></td>
            <td align="center"><inline-formula><alternatives>
            <tex-math><![CDATA[\tau(d^2R^2/r^2)]]></tex-math>
            <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>œÑ</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msup><mml:mi>d</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:msup><mml:mi>R</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mi>/</mml:mi><mml:msup><mml:mi>r</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula></td>
            <td align="center"><ext-link ext-link-type="uri" xlink:href="https://faculty.cc.gatech.edu/~vempala/papers/survey.pdf">Vempala
            (2005)</ext-link></td>
          </tr>
          <tr>
            <td align="center"><monospace>Hit and Run</monospace></td>
            <td align="center"><inline-formula><alternatives>
            <tex-math><![CDATA[\tau(d^2R^2/r^2)]]></tex-math>
            <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>œÑ</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msup><mml:mi>d</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:msup><mml:mi>R</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mi>/</mml:mi><mml:msup><mml:mi>r</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula></td>
            <td align="center"><ext-link ext-link-type="uri" xlink:href="https://link.springer.com/content/pdf/10.1007/s101070050099.pdf">Lovasz
            (1999)</ext-link></td>
          </tr>
          <tr>
            <td align="center"><monospace>Dikin Walk</monospace></td>
            <td align="center"><inline-formula><alternatives>
            <tex-math><![CDATA[\tau(nd)]]></tex-math>
            <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>œÑ</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>n</mml:mi><mml:mi>d</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula></td>
            <td align="center"><ext-link ext-link-type="uri" xlink:href="https://arxiv.org/pdf/1508.01977">Sachdeva
            et al.¬†(2015)</ext-link></td>
          </tr>
          <tr>
            <td align="center"><monospace>Vaidya Walk</monospace></td>
            <td align="center"><inline-formula><alternatives>
            <tex-math><![CDATA[\tau(n^{1/2}d^{3/2})]]></tex-math>
            <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>œÑ</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msup><mml:mi>n</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mi>/</mml:mi><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mi>d</mml:mi><mml:mrow><mml:mn>3</mml:mn><mml:mi>/</mml:mi><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula></td>
            <td align="center"><ext-link ext-link-type="uri" xlink:href="https://jmlr.org/papers/v19/18-158.html">Chen
            et al.¬†(2018)</ext-link></td>
          </tr>
          <tr>
            <td align="center"><monospace>John Walk</monospace></td>
            <td align="center"><inline-formula><alternatives>
            <tex-math><![CDATA[\tau(d^{2.5})]]></tex-math>
            <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>œÑ</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msup><mml:mi>d</mml:mi><mml:mn>2.5</mml:mn></mml:msup><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula></td>
            <td align="center"><ext-link ext-link-type="uri" xlink:href="https://jmlr.org/papers/v19/18-158.html">Chen
            et al.¬†(2018)</ext-link></td>
          </tr>
          <tr>
            <td align="center"><monospace>Lee Sidford Walk</monospace></td>
            <td align="center"><inline-formula><alternatives>
            <tex-math><![CDATA[\tau(d^{2})]]></tex-math>
            <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>œÑ</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msup><mml:mi>d</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula></td>
            <td align="center"><ext-link ext-link-type="uri" xlink:href="https://arxiv.org/abs/1911.05656">Laddha
            et al.¬†(2019)</ext-link></td>
          </tr>
        </tbody>
      </table>
    </table-wrap>
    <p>The mixing times refer to the required number of steps to
    converge to stationary distribution. In each,
    <inline-formula><alternatives>
    <tex-math><![CDATA[d]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>d</mml:mi></mml:math></alternatives></inline-formula>
    refers to the dimension of the polytope and
    <inline-formula><alternatives>
    <tex-math><![CDATA[n]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>n</mml:mi></mml:math></alternatives></inline-formula>
    refers to the number of boundaries (<inline-formula><alternatives>
    <tex-math><![CDATA[\mathcal{K}_1]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>ùí¶</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math></alternatives></inline-formula>
    dimensions). In the first 2 walks, <inline-formula><alternatives>
    <tex-math><![CDATA[R^2/r^2]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msup><mml:mi>R</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mi>/</mml:mi><mml:msup><mml:mi>r</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>
    means where the convex body contains a ball of radius
    <inline-formula><alternatives>
    <tex-math><![CDATA[r]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>r</mml:mi></mml:math></alternatives></inline-formula>
    and is mostly contained in a ball of radius
    <inline-formula><alternatives>
    <tex-math><![CDATA[R]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>R</mml:mi></mml:math></alternatives></inline-formula>.</p>
  </sec>
  <sec id="preprocessing-algorithms">
    <title>Preprocessing Algorithms</title>
    <p><monospace>PolytopeWalk</monospace> comes with 2 preprocessing
    algorithms: initialization and facial reduction.</p>
    <p><bold>Initialization:</bold> If the user cannot specify a point
    inside of the polytope to start, <monospace>PolytopeWalk</monospace>
    provides a class to compute an initial point well within the
    polytope for both the full-dimensional formulation and constrained
    formulation. In <inline-formula><alternatives>
    <tex-math><![CDATA[\mathcal{K}_2]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>ùí¶</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math></alternatives></inline-formula>,
    this is akin to solving the linear program maximizing
    <inline-formula><alternatives>
    <tex-math><![CDATA[\delta \in \mathbb{R}]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>Œ¥</mml:mi><mml:mo>‚àà</mml:mo><mml:mi>‚Ñù</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>
    s.t. <inline-formula><alternatives>
    <tex-math><![CDATA[Ax =b]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>A</mml:mi><mml:mi>x</mml:mi><mml:mo>=</mml:mo><mml:mi>b</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>
    and <inline-formula><alternatives>
    <tex-math><![CDATA[x \succeq_k \vec{\delta}]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>x</mml:mi><mml:msub><mml:mo>‚âΩ</mml:mo><mml:mi>k</mml:mi></mml:msub><mml:mover><mml:mi>Œ¥</mml:mi><mml:mo accent="true">‚Üí</mml:mo></mml:mover></mml:mrow></mml:math></alternatives></inline-formula>.
    In <inline-formula><alternatives>
    <tex-math><![CDATA[\mathcal{K}_1]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>ùí¶</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math></alternatives></inline-formula>,
    this is equivalent to maximizing <inline-formula><alternatives>
    <tex-math><![CDATA[\delta \in \mathbb{R}]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>Œ¥</mml:mi><mml:mo>‚àà</mml:mo><mml:mi>‚Ñù</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>
    such that <inline-formula><alternatives>
    <tex-math><![CDATA[Ax + \delta \cdot \mathbb{1} \le b]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>A</mml:mi><mml:mi>x</mml:mi><mml:mo>+</mml:mo><mml:mi>Œ¥</mml:mi><mml:mo>‚ãÖ</mml:mo><mml:mn>ùüô</mml:mn><mml:mo>‚â§</mml:mo><mml:mi>b</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>
    where <inline-formula><alternatives>
    <tex-math><![CDATA[\mathbb{1}]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mn>ùüô</mml:mn></mml:math></alternatives></inline-formula>
    is the all-ones vector <inline-formula><alternatives>
    <tex-math><![CDATA[\in \mathbb{R}^n]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mo>‚àà</mml:mo><mml:msup><mml:mi>‚Ñù</mml:mi><mml:mi>n</mml:mi></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>.</p>
    <p><bold>Facial Reduction:</bold> We adopt the facial reduction
    algorithm implementation from Drusvyatskiy‚Äôs research (Drusvyatskiy
    et al.
    (<xref alt="2017" rid="ref-drusvyatskiy2017many" ref-type="bibr">2017</xref>))
    (Im &amp; Wolkowicz
    (<xref alt="2023" rid="ref-im2023revisiting" ref-type="bibr">2023</xref>)).
    The facial reduction algorithm deals with cases of degeneracy in the
    polytope. In the constrained formulation
    <inline-formula><alternatives>
    <tex-math><![CDATA[\mathcal{K}_2 = \{x \in \mathbb{R}^d \ | \ Ax = b, x \succeq_k 0\}]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msub><mml:mi>ùí¶</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mo stretchy="false" form="prefix">{</mml:mo><mml:mi>x</mml:mi><mml:mo>‚àà</mml:mo><mml:msup><mml:mi>‚Ñù</mml:mi><mml:mi>d</mml:mi></mml:msup><mml:mspace width="0.222em"></mml:mspace><mml:mo stretchy="false" form="prefix">|</mml:mo><mml:mspace width="0.222em"></mml:mspace><mml:mi>A</mml:mi><mml:mi>x</mml:mi><mml:mo>=</mml:mo><mml:mi>b</mml:mi><mml:mo>,</mml:mo><mml:mi>x</mml:mi><mml:msub><mml:mo>‚âΩ</mml:mo><mml:mi>k</mml:mi></mml:msub><mml:mn>0</mml:mn><mml:mo stretchy="false" form="postfix">}</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>,
    degeneracy occurs when there is a lack of strict feasibility in the
    polytope: there does not exist an <inline-formula><alternatives>
    <tex-math><![CDATA[x \in \mathbb{R}^d]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>x</mml:mi><mml:mo>‚àà</mml:mo><mml:msup><mml:mi>‚Ñù</mml:mi><mml:mi>d</mml:mi></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>
    such that <inline-formula><alternatives>
    <tex-math><![CDATA[Ax = b]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>A</mml:mi><mml:mi>x</mml:mi><mml:mo>=</mml:mo><mml:mi>b</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>
    and <inline-formula><alternatives>
    <tex-math><![CDATA[x \succ_k 0]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>x</mml:mi><mml:msub><mml:mo>‚âª</mml:mo><mml:mi>k</mml:mi></mml:msub><mml:mn>0</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>.
    The facial reduction algorithm eliminates variables in the last k
    dimensions fixed at <inline-formula><alternatives>
    <tex-math><![CDATA[0]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mn>0</mml:mn></mml:math></alternatives></inline-formula>.
    It is far more commonly used in linear programming than MCMC
    sampling. Degeneracy exists in polytopes when the lower-dimensional
    polytope is embedded in a higher dimension. For example, if one
    attempts to use MCMC algorithms to sample from a 2-dimensional
    hypercube in 5 dimensions, the proposal distributions which generate
    an ellipsoid in 5 dimensions will certainly reject each proposal. It
    is crucial that one projects the polytope back into the 2
    dimensional form to run the MCMC sampler efficiently. Facial
    Reduction accomplishes this task, ensuring numerical stability for
    sampling.</p>
  </sec>
  <sec id="package-comparison">
    <title>Package Comparison</title>
    <table-wrap>
      <table>
        <colgroup>
          <col width="38%" />
          <col width="22%" />
          <col width="14%" />
          <col width="12%" />
          <col width="14%" />
        </colgroup>
        <thead>
          <tr>
            <th>Feature</th>
            <th align="center"><monospace>PolytopeWalk</monospace></th>
            <th align="center"><monospace>Volesti</monospace></th>
            <th align="center"><monospace>WalkR</monospace></th>
            <th align="center"><monospace>Polyrun</monospace></th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>Constrained Formulation</td>
            <td align="center"><styled-content style="color:green">Y</styled-content></td>
            <td align="center"><styled-content style="color:red">N</styled-content></td>
            <td align="center"><styled-content style="color:green">Y</styled-content></td>
            <td align="center"><styled-content style="color:green">Y</styled-content></td>
          </tr>
          <tr>
            <td>Sparse Friendly</td>
            <td align="center"><styled-content style="color:green">Y</styled-content></td>
            <td align="center"><styled-content style="color:red">N</styled-content></td>
            <td align="center"><styled-content style="color:red">N</styled-content></td>
            <td align="center"><styled-content style="color:red">N</styled-content></td>
          </tr>
          <tr>
            <td>C++ Implementation</td>
            <td align="center"><styled-content style="color:green">Y</styled-content></td>
            <td align="center"><styled-content style="color:green">Y</styled-content></td>
            <td align="center"><styled-content style="color:red">N</styled-content></td>
            <td align="center"><styled-content style="color:red">N</styled-content></td>
          </tr>
          <tr>
            <td>Facial Reduction</td>
            <td align="center"><styled-content style="color:green">Y</styled-content></td>
            <td align="center"><styled-content style="color:red">N</styled-content></td>
            <td align="center"><styled-content style="color:red">N</styled-content></td>
            <td align="center"><styled-content style="color:red">N</styled-content></td>
          </tr>
          <tr>
            <td>Dikin Walk</td>
            <td align="center"><styled-content style="color:green">Y</styled-content></td>
            <td align="center"><styled-content style="color:green">Y</styled-content></td>
            <td align="center"><styled-content style="color:green">Y</styled-content></td>
            <td align="center"><styled-content style="color:red">N</styled-content></td>
          </tr>
          <tr>
            <td>Vaidya Walk</td>
            <td align="center"><styled-content style="color:green">Y</styled-content></td>
            <td align="center"><styled-content style="color:green">Y</styled-content></td>
            <td align="center"><styled-content style="color:red">N</styled-content></td>
            <td align="center"><styled-content style="color:red">N</styled-content></td>
          </tr>
          <tr>
            <td>John Walk</td>
            <td align="center"><styled-content style="color:green">Y</styled-content></td>
            <td align="center"><styled-content style="color:green">Y</styled-content></td>
            <td align="center"><styled-content style="color:red">N</styled-content></td>
            <td align="center"><styled-content style="color:red">N</styled-content></td>
          </tr>
          <tr>
            <td>Lee-Sidford Walk</td>
            <td align="center"><styled-content style="color:green">Y</styled-content></td>
            <td align="center"><styled-content style="color:red">N</styled-content></td>
            <td align="center"><styled-content style="color:red">N</styled-content></td>
            <td align="center"><styled-content style="color:red">N</styled-content></td>
          </tr>
        </tbody>
      </table>
    </table-wrap>
    <p>Table II contrasts the features of
    <monospace>PolytopeWalk</monospace> with
    <monospace>Volesti</monospace> (Chalkis &amp; Fisikopoulos
    (<xref alt="2021" rid="ref-Chalkis_2021" ref-type="bibr">2021</xref>)),
    <monospace>WalkR</monospace> (Yao &amp; Kane
    (<xref alt="2017" rid="ref-Yao2017" ref-type="bibr">2017</xref>)),
    and <monospace>Polyrun</monospace> (Ciomek &amp; Kadzi≈Ñski
    (<xref alt="2021" rid="ref-CIOMEK2021100659" ref-type="bibr">2021</xref>)).
    <monospace>PolytopeWalk</monospace> is the first open-source package
    that enables users to leverage sparsity and use constrained
    formulations of the polytopes to generate points uniformly with fast
    MCMC algorithms. We are also one of the first to primarily focus on
    barrier walk MCMC samplers. <monospace>PolytopeWalk</monospace>
    includes a C++ implementation with corresponding Python wrapper
    code. Conversely, <monospace>Volesti</monospace> is implemented in
    C++ with some of its code represented in the Python library
    <monospace>Dingo</monospace>. <monospace>Polyrun</monospace> only
    works on Java and <monospace>WalkR</monospace> on R. Notably,
    <monospace>WalkR</monospace> was removed from the CRAN repository,
    motivating further open source MCMC sampling development.</p>
  </sec>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>Much of the work was done while Yuansi Chen was an assistant
  professor in the Department of Statistical Science at Duke University.
  Both authors are partially supported by NSF CAREER Award DMS-2237322,
  Sloan Research Fellowship and Ralph E. Powe Junior Faculty Enhancement
  Awards.</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-DBLPU003AjournalsU002FcorrU002Fabs-1911-05656">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Laddha</surname><given-names>Aditi</given-names></name>
        <name><surname>Lee</surname><given-names>Yin Tat</given-names></name>
        <name><surname>Vempala</surname><given-names>Santosh S.</given-names></name>
      </person-group>
      <article-title>Strong self-concordance and sampling</article-title>
      <source>CoRR</source>
      <year iso-8601-date="2019">2019</year>
      <volume>abs/1911.05656</volume>
      <uri>http://arxiv.org/abs/1911.05656</uri>
    </element-citation>
  </ref>
  <ref id="ref-JMLRU003Av19U003A18-158">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Chen</surname><given-names>Yuansi</given-names></name>
        <name><surname>Dwivedi</surname><given-names>Raaz</given-names></name>
        <name><surname>Wainwright</surname><given-names>Martin J.</given-names></name>
        <name><surname>Yu</surname><given-names>Bin</given-names></name>
      </person-group>
      <article-title>Fast MCMC sampling algorithms on polytopes</article-title>
      <source>Journal of Machine Learning Research</source>
      <year iso-8601-date="2018">2018</year>
      <volume>19</volume>
      <issue>55</issue>
      <uri>http://jmlr.org/papers/v19/18-158.html</uri>
      <fpage>1</fpage>
      <lpage>86</lpage>
    </element-citation>
  </ref>
  <ref id="ref-drusvyatskiy2017many">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Drusvyatskiy</surname><given-names>Dmitriy</given-names></name>
        <name><surname>Wolkowicz</surname><given-names>Henry</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>The many faces of degeneracy in conic optimization</article-title>
      <source>Foundations and Trends in Optimization</source>
      <publisher-name>Now Publishers, Inc.</publisher-name>
      <year iso-8601-date="2017">2017</year>
      <volume>3</volume>
      <issue>2</issue>
      <fpage>77</fpage>
      <lpage>170</lpage>
    </element-citation>
  </ref>
  <ref id="ref-DBLPU003AjournalsU002FcorrU002FSachdevaV15">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Sachdeva</surname><given-names>Sushant</given-names></name>
        <name><surname>Vishnoi</surname><given-names>Nisheeth K.</given-names></name>
      </person-group>
      <article-title>A simple analysis of the dikin walk</article-title>
      <source>CoRR</source>
      <year iso-8601-date="2015">2015</year>
      <volume>abs/1508.01977</volume>
      <uri>http://arxiv.org/abs/1508.01977</uri>
    </element-citation>
  </ref>
  <ref id="ref-vempala2005">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Vempala</surname><given-names>Santosh</given-names></name>
      </person-group>
      <article-title>Geometric random walks: A survey</article-title>
      <source>Combinatorial and Computational Geometry</source>
      <year iso-8601-date="2005">2005</year>
      <volume>52</volume>
      <uri>https://faculty.cc.gatech.edu/~vempala/papers/survey.pdf</uri>
    </element-citation>
  </ref>
  <ref id="ref-Simonovits2003">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Simonovits</surname><given-names>Mikl¬¥os</given-names></name>
      </person-group>
      <article-title>How to compute the volume in high dimension?</article-title>
      <source>Mathematical Programming</source>
      <year iso-8601-date="2003">2003</year>
      <volume>97</volume>
      <uri>https://link.springer.com/article/10.1007/s10107-003-0447-x</uri>
    </element-citation>
  </ref>
  <ref id="ref-DBLPU003AjournalsU002FcorrU002Fabs-1803-05861">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Cal√®s</surname><given-names>Ludovic</given-names></name>
        <name><surname>Chalkis</surname><given-names>Apostolos</given-names></name>
        <name><surname>Emiris</surname><given-names>Ioannis Z.</given-names></name>
        <name><surname>Fisikopoulos</surname><given-names>Vissarion</given-names></name>
      </person-group>
      <article-title>Practical volume computation of structured convex bodies, and an application to modeling portfolio dependencies and financial crises</article-title>
      <source>CoRR</source>
      <year iso-8601-date="2018">2018</year>
      <volume>abs/1803.05861</volume>
      <uri>http://arxiv.org/abs/1803.05861</uri>
    </element-citation>
  </ref>
  <ref id="ref-COBRA">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Heirendt</surname><given-names>Laurent</given-names></name>
        <name><surname>Arreckx</surname><given-names>Sylvain</given-names></name>
        <name><surname>Pfau</surname><given-names>Thomas</given-names></name>
        <name><surname>Mendoza</surname><given-names>Sebasti√°n N.</given-names></name>
        <name><surname>Richelle</surname><given-names>Anne</given-names></name>
        <name><surname>Heinken</surname><given-names>Almut</given-names></name>
        <name><surname>Haraldsd√≥ttir</surname><given-names>Hulda S.</given-names></name>
        <name><surname>Wachowiak</surname><given-names>Jacek</given-names></name>
        <name><surname>Keating</surname><given-names>Sarah M.</given-names></name>
        <name><surname>Vlasov</surname><given-names>Vanja</given-names></name>
        <name><surname>Magnusd√≥ttir</surname><given-names>Stefania</given-names></name>
        <name><surname>Ng</surname><given-names>Chiam Yu</given-names></name>
        <name><surname>Preciat</surname><given-names>German</given-names></name>
        <name><surname>≈Ωagare</surname><given-names>Alise</given-names></name>
        <name><surname>Chan</surname><given-names>Siu H. J.</given-names></name>
        <name><surname>Aurich</surname><given-names>Maike K.</given-names></name>
        <name><surname>Clancy</surname><given-names>Catherine M.</given-names></name>
        <name><surname>Modamio</surname><given-names>Jennifer</given-names></name>
        <name><surname>Sauls</surname><given-names>John T.</given-names></name>
        <name><surname>Noronha</surname><given-names>Alberto</given-names></name>
        <name><surname>Bordbar</surname><given-names>Aarash</given-names></name>
        <name><surname>Cousins</surname><given-names>Benjamin</given-names></name>
        <name><surname>Assal</surname><given-names>Diana C. El</given-names></name>
        <name><surname>Valcarcel</surname><given-names>Luis V.</given-names></name>
        <name><surname>Apaolaza</surname><given-names>I√±igo</given-names></name>
        <name><surname>Ghaderi</surname><given-names>Susan</given-names></name>
        <name><surname>Ahookhosh</surname><given-names>Masoud</given-names></name>
        <name><surname>Guebila</surname><given-names>Marouen Ben</given-names></name>
        <name><surname>Kostromins</surname><given-names>Andrejs</given-names></name>
        <name><surname>Sompairac</surname><given-names>Nicolas</given-names></name>
        <name><surname>Le</surname><given-names>Hoai M.</given-names></name>
        <name><surname>Ma</surname><given-names>Ding</given-names></name>
        <name><surname>Sun</surname><given-names>Yuekai</given-names></name>
        <name><surname>Wang</surname><given-names>Lin</given-names></name>
        <name><surname>Yurkovich</surname><given-names>James T.</given-names></name>
        <name><surname>Oliveira</surname><given-names>Miguel A. P.</given-names></name>
        <name><surname>Vuong</surname><given-names>Phan T.</given-names></name>
        <name><surname>Assal</surname><given-names>Lemmer P. El</given-names></name>
        <name><surname>Kuperstein</surname><given-names>Inna</given-names></name>
        <name><surname>Zinovyev</surname><given-names>Andrei</given-names></name>
        <name><surname>Hinton</surname><given-names>H. Scott</given-names></name>
        <name><surname>Bryant</surname><given-names>William A.</given-names></name>
        <name><surname>Artacho</surname><given-names>Francisco J. Arag√≥n</given-names></name>
        <name><surname>Planes</surname><given-names>Francisco J.</given-names></name>
        <name><surname>Stalidzans</surname><given-names>Egils</given-names></name>
        <name><surname>Maass</surname><given-names>Alejandro</given-names></name>
        <name><surname>Vempala</surname><given-names>Santosh</given-names></name>
        <name><surname>Hucka</surname><given-names>Michael</given-names></name>
        <name><surname>Saunders</surname><given-names>Michael A.</given-names></name>
        <name><surname>Maranas</surname><given-names>Costas D.</given-names></name>
        <name><surname>Lewis</surname><given-names>Nathan E.</given-names></name>
        <name><surname>Sauter</surname><given-names>Thomas</given-names></name>
        <name><surname>Palsson</surname><given-names>Bernhard √ò.</given-names></name>
        <name><surname>Thiele</surname><given-names>Ines</given-names></name>
        <name><surname>Fleming</surname><given-names>Ronan M. T.</given-names></name>
      </person-group>
      <article-title>Creation and analysis of biochemical constraint-based models: The COBRA toolbox v3.0</article-title>
      <year iso-8601-date="2018">2018</year>
      <uri>https://arxiv.org/abs/1710.04038</uri>
    </element-citation>
  </ref>
  <ref id="ref-10.1093U002FnarU002Fgkv1049">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>King</surname><given-names>Zachary A.</given-names></name>
        <name><surname>Lu</surname><given-names>Justin</given-names></name>
        <name><surname>Dr√§ger</surname><given-names>Andreas</given-names></name>
        <name><surname>Miller</surname><given-names>Philip</given-names></name>
        <name><surname>Federowicz</surname><given-names>Stephen</given-names></name>
        <name><surname>Lerman</surname><given-names>Joshua A.</given-names></name>
        <name><surname>Ebrahim</surname><given-names>Ali</given-names></name>
        <name><surname>Palsson</surname><given-names>Bernhard O.</given-names></name>
        <name><surname>Lewis</surname><given-names>Nathan E.</given-names></name>
      </person-group>
      <article-title>BiGG Models: A platform for integrating, standardizing and sharing genome-scale models</article-title>
      <source>Nucleic Acids Research</source>
      <year iso-8601-date="2015-10">2015</year><month>10</month>
      <volume>44</volume>
      <issue>D1</issue>
      <issn>0305-1048</issn>
      <uri>https://doi.org/10.1093/nar/gkv1049</uri>
      <pub-id pub-id-type="doi">10.1093/nar/gkv1049</pub-id>
      <fpage>D515</fpage>
      <lpage>D522</lpage>
    </element-citation>
  </ref>
  <ref id="ref-im2023revisiting">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Im</surname><given-names>Haesol</given-names></name>
        <name><surname>Wolkowicz</surname><given-names>Henry</given-names></name>
      </person-group>
      <article-title>Revisiting degeneracy, strict feasibility, stability, in linear programming</article-title>
      <source>European Journal of Operational Research</source>
      <publisher-name>Elsevier</publisher-name>
      <year iso-8601-date="2023">2023</year>
      <volume>310</volume>
      <issue>2</issue>
      <fpage>495</fpage>
      <lpage>510</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Chalkis_2021">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Chalkis</surname><given-names>Apostolos</given-names></name>
        <name><surname>Fisikopoulos</surname><given-names>Vissarion</given-names></name>
      </person-group>
      <article-title>Volesti: Volume approximation and sampling for convex polytopes in r</article-title>
      <source>The R Journal</source>
      <publisher-name>The R Foundation</publisher-name>
      <year iso-8601-date="2021">2021</year>
      <volume>13</volume>
      <issue>2</issue>
      <issn>2073-4859</issn>
      <uri>http://dx.doi.org/10.32614/RJ-2021-077</uri>
      <pub-id pub-id-type="doi">10.32614/rj-2021-077</pub-id>
      <fpage>561</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Yao2017">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Yao</surname><given-names>Andy Yu Zhu</given-names></name>
        <name><surname>Kane</surname><given-names>David</given-names></name>
      </person-group>
      <article-title>Walkr: MCMC sampling from non-negative convex polytopes</article-title>
      <source>Journal of Open Source Software</source>
      <publisher-name>The Open Journal</publisher-name>
      <year iso-8601-date="2017">2017</year>
      <volume>2</volume>
      <issue>11</issue>
      <uri>https://doi.org/10.21105/joss.00061</uri>
      <pub-id pub-id-type="doi">10.21105/joss.00061</pub-id>
      <fpage>61</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-CIOMEK2021100659">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Ciomek</surname><given-names>Krzysztof</given-names></name>
        <name><surname>Kadzi≈Ñski</surname><given-names>Mi≈Çosz</given-names></name>
      </person-group>
      <article-title>Polyrun: A java library for sampling from the bounded convex polytopes</article-title>
      <source>SoftwareX</source>
      <year iso-8601-date="2021">2021</year>
      <volume>13</volume>
      <fpage>100659</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
